import pandas as pd

def main():
    expected_column_names_path = 'column_names.txt'
    csv_file_path = 'your_file.csv'  # Replace with your CSV file path

    # Read expected column names from the text file
    with open(expected_column_names_path, 'r') as file:
        expected_column_names = [line.strip() for line in file]

    # Read the actual column names from the CSV file
    actual_column_names = pd.read_csv(csv_file_path, nrows=0).columns

    missing_columns = set(expected_column_names) - set(actual_column_names)

    if missing_columns:
        print("Missing columns:")
        for col in missing_columns:
            print(col)
    else:
        print("No missing columns found.")

if __name__ == "__main__":
    main()

import pandas as pd

def load_csv_into_dict(csv_path):
    df = pd.read_csv(csv_path)
    records_dict = df.to_dict(orient='index')
    return records_dict

def get_symbol_by_trade_id(records_dict, trade_id):
    record = records_dict.get(trade_id)
    if record:
        return record['Symbol']
    else:
        return None

def main():
    csv_file_path = 'data.csv'
    
    records_dict = load_csv_into_dict(csv_file_path)

    trade_id = input("Enter Trade ID: ")
    symbol = get_symbol_by_trade_id(records_dict, int(trade_id))

    if symbol:
        print(f"Symbol for Trade ID {trade_id}: {symbol}")
    else:
        print("Trade ID not found in the CSV.")

if __name__ == "__main__":
    main()

def read_column_order_from_file(file_path):
    with open(file_path, 'r') as file:
        column_order = [line.strip() for line in file]
    return column_order

def verify_column_order(csv_path, column_order):
    with open(csv_path, 'r') as file:
        header = file.readline().strip().split(',')
    
    if header == column_order:
        return True
    else:
        return False

def main():
    column_order_file = 'column_order.txt'
    csv_file_path = 'data.csv'

    column_order = read_column_order_from_file(column_order_file)
    is_correct_order = verify_column_order(csv_file_path, column_order)

    if is_correct_order:
        print("Column order is correct.")
    else:
        print("Column order is incorrect.")

if __name__ == "__main__":
    main()
from datetime import datetime

def change_date_format(input_date, input_format, output_format):
    input_datetime = datetime.strptime(input_date, input_format)
    output_date = input_datetime.strftime(output_format)
    return output_date

def main():
    input_date = "2023-07-03"
    input_format = "%Y-%m-%d"
    output_format = "%d/%m/%Y"

    formatted_date = change_date_format(input_date, input_format, output_format)
    print("Formatted date:", formatted_date)

if __name__ == "__main__":
    main()
